{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","index.js"],"names":["Navbar","props","className","mode","style","backgroundColor","color","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","target","placeholder","rows","newTxt","toUpperCase","showAlert","toLowerCase","split","join","navigator","clipboard","writeText","arr","console","log","length","words","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","setTimeout","document","body","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.94fe3864.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom'\n\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode}`} style={{ backgroundColor: props.mode === 'light' ? '#e3f2fd' : 'rgb(33, 37, 41)',color: props.mode === 'light' ? 'black' : 'white' }}>\n            {/* <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}></nav> */}\n            <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\n                        </li>\n                        {/* <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\n                        </li> */}\n                    </ul>\n                    {/* <form className=\"d-flex\">\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n                    </form> */}\n                    <div className=\"form-check form-switch\">\n                        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\" />\n                        <label className={`form-check-label text-${props.mode === 'light' ? 'dark' : 'light'}`} htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    // aboutText: PropTypes.string\n}\n\nNavbar.defaultProps = {\n    title: 'Navbar',\n    // aboutText: 'About'\n}\n","import React, { useState } from 'react'\n\nexport default function TextForm(props) {\n    const handleOnChange = (event) => {\n        setText(event.target.value);\n        \n    }\n    const handleUpperCase = () => {\n        let newTxt=text.toUpperCase();\n        setText(newTxt);\n        props.showAlert(\"Text changed to Uppercase!\",\"success\");\n    }\n    const handleLowerCase = () => {\n        let newTxt=text.toLowerCase();\n        setText(newTxt);\n        props.showAlert(\"Text changed to Lowercase!\",\"success\");\n    }\n    const handleClear = () => {\n        setText('');\n        props.showAlert(\"Text cleared!\",\"success\");\n    }\n    const handleSpaces = () => {\n        let newTxt = text.split(/[ ]+/);\n        setText(newTxt.join(\" \"));\n        props.showAlert(\"Extra spaces removed!\",\"success\");\n    }\n    const handleCopy = () => {\n        navigator.clipboard.writeText(text);\n        props.showAlert(\"Text copied!\",\"success\");\n    }  \n    \n    const words = (text) => {\n        let arr= text.split(/[ ]+/);\n        console.log(arr);\n       if (arr[(arr.length)-1]!==\"\") {\n           return arr.length;\n       } else {\n           return (arr.length-1)\n       }\n    }\n    \n\n    const [text, setText] = useState('');\n    return (\n        <>\n        <div className=\"container my-3\" style={{color:props.mode==='light'?'black':'white'}}>\n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\">\n                <textarea className=\"form-control\" id=\"my-box\" value={text} onChange={handleOnChange}  placeholder={ props.mode==='light'?'Enter yout text here ...':''} style={{backgroundColor:props.mode==='light'?'white':'grey',color:props.mode==='light'?'black':'white' }} rows=\"10\"></textarea>\n            </div>\n            <button type=\"button\" className=\"btn btn-primary mx-1\" onClick={handleUpperCase}>Uppercase</button>\n            <button type=\"button\" className=\"btn btn-primary mx-1\" onClick={handleLowerCase}>Lowercase</button>\n            <button type=\"button\" className=\"btn btn-primary mx-1\" onClick={handleClear}>Clear Text</button>\n            <button type=\"button\" className=\"btn btn-primary mx-1\" onClick={handleSpaces}>Remove Extra Spaces</button>\n            <button type=\"button\" className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy to clipboard</button>\n        </div>\n        <div className=\"container\" style={{color:props.mode==='light'?'black':'white'}}>\n            <h2>Text Summary</h2>\n            <h6>{words(text)} words and {text.length} characters</h6>\n        </div>\n        <div className=\"container my-3\" style={{color:props.mode==='light'?'black':'white'}}>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:'Nothing to preview'}</p>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n    const capitalize = (word) => {\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\n    }\n    \n    return (\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\n        </div>\n    )\n}\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport Alert from './components/Alert';\nimport React, { useState } from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Switch\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg: msg,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n\n  }\n\n\n\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled!\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled!\", \"success\");\n    }\n  }\n\n  return (\n    // <Router>\n      <>\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container\">\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\"> */}\n              <TextForm showAlert={showAlert} heading='Enter Your Text' mode={mode} />\n            {/* </Route>\n          </Switch> */}\n        </div>\n      </>\n    // </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}